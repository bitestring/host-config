- hosts: localhost
  become: no

  collections:
    - community.general
    - ansible.posix

  vars:
    username: "{{ ansible_user_id }}"

  tasks:
    - name: Echo init message
      debug:
        msg: Playing system-config.yml as user {{ username }}

    - name: Copy Nvidia configuration for customization
      become: yes
      copy:
        src: /usr/share/X11/xorg.conf.d/nvidia.conf
        dest: /etc/X11/xorg.conf.d/nvidia.conf

    # Enable Nvidia DynamicPowerManagement
    # http://download.nvidia.com/XFree86/Linux-x86_64/440.31/README/dynamicpowermanagement.html
    - name: Enable Nvidia Dynamic Power Managment
      become: yes
      copy:
        dest: "/etc/modprobe.d/nvidia.conf"
        content: "options nvidia NVreg_DynamicPowerManagement=0x02\n"

    - name: Create directory for Virtual Machines with CoW disabled
      file:
        path: ~/Virtual_Machines
        state: directory
        attributes: +C
        recurse: yes

    - name: Add polkit rule to allow Virt-Manager to manage virtual machines
      become: yes
      copy:
        dest: /etc/polkit-1/rules.d/80-libvirt-manage.rules
        content: |
          polkit.addRule(function(action, subject) {
            if (action.id == "org.libvirt.unix.manage" && subject.local && subject.active && subject.isInGroup("wheel")) {
                return polkit.Result.YES;
            }
          });

    - name: Configure firewall
      block:
        - name: Configure firewall - Disable SSH on public zone
          ansible.posix.firewalld:
            zone: public
            service: ssh
            permanent: yes
            immediate: yes
            state: disabled
        - name: Configure firewall - Enable Syncthing
          ansible.posix.firewalld:
            zone: home
            service: syncthing
            permanent: yes
            immediate: yes
            state: enabled
        - name: Configure firewall - Enable KDEConnect
          ansible.posix.firewalld:
            zone: home
            service: kdeconnect
            permanent: yes
            immediate: yes
            state: enabled

    - name: Start systemd services
      become: yes
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
      with_items:
        - cockpit.socket
        - fail2ban
        - syncthing@{{ ansible_user_id }}
